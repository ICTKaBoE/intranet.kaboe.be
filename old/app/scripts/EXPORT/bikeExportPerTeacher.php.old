<?php

use Core\Config;
use Ouzo\Utilities\Clock;
use Ouzo\Utilities\Arrays;
use Database\Repository\BikeEvent;
use O365\Objects\User;
use Ouzo\Utilities\Json;
use Ouzo\Utilities\Strings;
use PhpOffice\PhpSpreadsheet\Spreadsheet;
use PhpOffice\PhpSpreadsheet\Writer\Xlsx;
use Security\Request;

require_once __DIR__ . "/../../../app/autoload.php";

$return = [];
$start = Clock::at($_POST['perTeacherStart']);
$end = Clock::at($_POST['perTeacherEnd']);

if (!file_exists(LOCATION_PUBLIC_DOWNLOADS)) mkdir(LOCATION_PUBLIC_DOWNLOADS, 0777);
if (!file_exists(LOCATION_PUBLIC_DOWNLOADS . "bike")) mkdir(LOCATION_PUBLIC_DOWNLOADS . "bike", 0777);

$bikeEvents = (new BikeEvent)->get();
$bikeEvents = Arrays::filter($bikeEvents, fn ($be) => Clock::at($be->date)->isAfterOrEqualTo($start) && Clock::at($be->date)->isBeforeOrEqualTo($end));
$teachersUpn = array_values(array_unique(Arrays::map($bikeEvents, fn ($be) => $be->upn)));

$prices = Config::get("tool/bike/price");

$spreadsheet = new Spreadsheet();
$mainSheet = $spreadsheet->getActiveSheet()->setTitle("Overzicht");
$mainSheet->setCellValue("A1", "Leerkracht");
$mainSheet->setCellValue("B1", "Kilometers");
$mainSheet->setCellValue("C1", "Kosten");

$mainRow = 2;
foreach ($teachersUpn as $upn) {
    if (!Strings::contains($upn, '@')) continue;

    $teacher = (new User)->get($upn);

    $mainSheet->setCellValue("A{$mainRow}", $teacher->getDisplayName());

    $sheet = $spreadsheet->createSheet();
    $sheet->setTitle($teacher->getDisplayName());

    $sheet->setCellValue("A1", 'Datum');
    $sheet->setCellValue("B1", 'Kilometers');
    $sheet->setCellValue("C1", 'Kosten');

    $teacherBikeEvents = Arrays::filter($bikeEvents, fn ($be) => Strings::equalsIgnoreCase($be->upn, $upn) && $be->distance > 0);

    $row = 2;
    $km = $costs = 0;
    foreach ($teacherBikeEvents as $bikeEvent) {
        $ppkm = ($bikeEvent->distanceInKm * 2) * Arrays::first(Arrays::filter($prices, fn ($p) => Clock::at($bikeEvent->date)->isAfterOrEqualTo(Clock::at($p['start'])) && Clock::at($bikeEvent->date)->isBeforeOrEqualTo(Clock::at($p['end']))))['amount'];
        $sheet->setCellValue("A{$row}", Clock::at($bikeEvent->date)->format("d/m/Y"));
        $sheet->setCellValue("B{$row}", ($bikeEvent->distanceInKm * 2));
        $sheet->setCellValue("C{$row}", $ppkm);

        $km += ($bikeEvent->distanceInKm * 2);
        $costs += $ppkm;

        $row++;
    }

    $row++;
    $sheet->setCellValue("A{$row}", "Totaal");
    $sheet->setCellValue("B{$row}", $km);
    $sheet->setCellValue("C{$row}", $costs);

    $mainSheet->setCellValue("B{$mainRow}", $km);
    $mainSheet->setCellValue("C{$mainRow}", $costs);

    $mainRow++;
}

$writer = new Xlsx($spreadsheet);
$writer->save(LOCATION_PUBLIC_DOWNLOADS . "bike/exportPerTeacher.xlsx");

$return['download'] = Request::host(protocol: 'https') . "/public/downloads/bike/exportPerTeacher.xlsx";

echo Json::safeEncode($return);
